-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.Admin exposing (AccountRequiredArguments, account, investors, pendingRequests)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


investors : SelectionSet decodesTo Api.Object.User -> SelectionSet (List decodesTo) Api.Object.Admin
investors object_ =
    Object.selectionForCompositeField "investors" [] object_ (identity >> Decode.list)


type alias AccountRequiredArguments =
    { id : Int }


account : AccountRequiredArguments -> SelectionSet decodesTo Api.Object.Account -> SelectionSet decodesTo Api.Object.Admin
account requiredArgs object_ =
    Object.selectionForCompositeField "account" [ Argument.required "id" requiredArgs.id Encode.int ] object_ identity


pendingRequests : SelectionSet decodesTo Api.Object.TransactionRequest -> SelectionSet (List decodesTo) Api.Object.Admin
pendingRequests object_ =
    Object.selectionForCompositeField "pendingRequests" [] object_ (identity >> Decode.list)
