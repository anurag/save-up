-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.Account exposing (TransactionsRequiredArguments, balanceInCents, id, kind, name, state, transactions, user, userId, yearlyInterest)

import Api.Enum.Kind
import Api.Enum.State
import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


id : SelectionSet Int Api.Object.Account
id =
    Object.selectionForField "Int" "id" [] Decode.int


userId : SelectionSet Int Api.Object.Account
userId =
    Object.selectionForField "Int" "userId" [] Decode.int


user : SelectionSet decodesTo Api.Object.User -> SelectionSet decodesTo Api.Object.Account
user object_ =
    Object.selectionForCompositeField "user" [] object_ identity


name : SelectionSet String Api.Object.Account
name =
    Object.selectionForField "String" "name" [] Decode.string


kind : SelectionSet Api.Enum.Kind.Kind Api.Object.Account
kind =
    Object.selectionForField "Enum.Kind.Kind" "kind" [] Api.Enum.Kind.decoder


state : SelectionSet Api.Enum.State.State Api.Object.Account
state =
    Object.selectionForField "Enum.State.State" "state" [] Api.Enum.State.decoder


balanceInCents : SelectionSet Float Api.Object.Account
balanceInCents =
    Object.selectionForField "Float" "balanceInCents" [] Decode.float


yearlyInterest : SelectionSet Float Api.Object.Account
yearlyInterest =
    Object.selectionForField "Float" "yearlyInterest" [] Decode.float


type alias TransactionsRequiredArguments =
    { since : Float }


transactions : TransactionsRequiredArguments -> SelectionSet decodesTo Api.Object.Transaction -> SelectionSet (List decodesTo) Api.Object.Account
transactions requiredArgs object_ =
    Object.selectionForCompositeField "transactions" [ Argument.required "since" requiredArgs.since Encode.float ] object_ (identity >> Decode.list)
