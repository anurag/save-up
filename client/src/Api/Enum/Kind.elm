-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Enum.Kind exposing (Kind(..), decoder, toString)

import Json.Decode as Decode exposing (Decoder)


type Kind
    = Savings


decoder : Decoder Kind
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "SAVINGS" ->
                        Decode.succeed Savings

                    _ ->
                        Decode.fail ("Invalid Kind type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : Kind -> String
toString enum =
    case enum of
        Savings ->
            "SAVINGS"
