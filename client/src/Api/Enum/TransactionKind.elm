-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Enum.TransactionKind exposing (TransactionKind(..), decoder, list, toString)

import Json.Decode as Decode exposing (Decoder)


type TransactionKind
    = Deposit
    | Withdrawal
    | Interest


list : List TransactionKind
list =
    [ Deposit, Withdrawal, Interest ]


decoder : Decoder TransactionKind
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "DEPOSIT" ->
                        Decode.succeed Deposit

                    "WITHDRAWAL" ->
                        Decode.succeed Withdrawal

                    "INTEREST" ->
                        Decode.succeed Interest

                    _ ->
                        Decode.fail ("Invalid TransactionKind type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : TransactionKind -> String
toString enum =
    case enum of
        Deposit ->
            "DEPOSIT"

        Withdrawal ->
            "WITHDRAWAL"

        Interest ->
            "INTEREST"
