-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Enum.Role exposing (Role(..), decoder, toString)

import Json.Decode as Decode exposing (Decoder)


type Role
    = Admin
    | Investor


decoder : Decoder Role
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "ADMIN" ->
                        Decode.succeed Admin

                    "INVESTOR" ->
                        Decode.succeed Investor

                    _ ->
                        Decode.fail ("Invalid Role type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : Role -> String
toString enum =
    case enum of
        Admin ->
            "ADMIN"

        Investor ->
            "INVESTOR"
